{
  "uid" : "90fbbb219974b62a",
  "name" : "invoke hello with auth header override in invoke",
  "fullName" : "invoke hello with auth header override in invoke",
  "historyId" : "8281d9ae4980212c56d33f8beea90248",
  "time" : {
    "start" : 1650281369858,
    "stop" : 1650281369872,
    "duration" : 14
  },
  "description" : "\n### Test\n```typescript\n() =>\n  __awaiter(void 0, void 0, void 0, function* () {\n    (0, jest_custom_reporter_1.log)(\"create FunctionsClient with wrong jwt\");\n    const fclient = new index_1.FunctionsClient(\n      `http://localhost:${relay.container.getMappedPort(8081)}`\n    );\n    const wrongKey = (0, jsonwebtoken_1.sign)({ name: \"anon\" }, \"wrong_jwt\");\n    (0,\n    jest_custom_reporter_1.attach)(\"setAuth with wrong jwt\", wrongKey, allure_js_commons_1.ContentType.TEXT);\n    fclient.setAuth(wrongKey);\n    (0, jest_custom_reporter_1.log)(\"invoke hello with Authorization header\");\n    const { data, error } = yield fclient.invoke(\"hello\", {\n      responseType: \"text\",\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    });\n    (0, jest_custom_reporter_1.log)(\"assert no error\");\n\n    expect(error).toBeNull();\n    (0, jest_custom_reporter_1.log)(`assert ${data} is equal to 'Hello World'`);\n    expect(data).toEqual(\"Hello World\");\n  });\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">() =&gt;\n  __awaiter(void 0, void 0, void 0, function* () {\n    (0, jest_custom_reporter_1.log)(&quot;create FunctionsClient with wrong jwt&quot;);\n    const fclient = new index_1.FunctionsClient(\n      `http://localhost:${relay.container.getMappedPort(8081)}`\n    );\n    const wrongKey = (0, jsonwebtoken_1.sign)({ name: &quot;anon&quot; }, &quot;wrong_jwt&quot;);\n    (0,\n    jest_custom_reporter_1.attach)(&quot;setAuth with wrong jwt&quot;, wrongKey, allure_js_commons_1.ContentType.TEXT);\n    fclient.setAuth(wrongKey);\n    (0, jest_custom_reporter_1.log)(&quot;invoke hello with Authorization header&quot;);\n    const { data, error } = yield fclient.invoke(&quot;hello&quot;, {\n      responseType: &quot;text&quot;,\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    });\n    (0, jest_custom_reporter_1.log)(&quot;assert no error&quot;);\n\n    expect(error).toBeNull();\n    (0, jest_custom_reporter_1.log)(`assert ${data} is equal to 'Hello World'`);\n    expect(data).toEqual(&quot;Hello World&quot;);\n  });\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "read function body",
      "time" : {
        "start" : 1650281366974,
        "stop" : 1650281366974,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "function body",
      "time" : {
        "start" : 1650281366974,
        "stop" : 1650281366974,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a8beb83a44d41207",
        "name" : "text/plain",
        "source" : "a8beb83a44d41207.txt",
        "type" : "text/plain",
        "size" : 103
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "add network",
      "time" : {
        "start" : 1650281366975,
        "stop" : 1650281366975,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "create relay hello-apsBR",
      "time" : {
        "start" : 1650281367703,
        "stop" : 1650281367703,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "start relay hello-apsBR",
      "time" : {
        "start" : 1650281367703,
        "stop" : 1650281367703,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "check function is healthy: hello-apsBR",
      "time" : {
        "start" : 1650281368206,
        "stop" : 1650281368206,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "function started to serve: hello-apsBR",
      "time" : {
        "start" : 1650281369750,
        "stop" : 1650281369750,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\n() =>\n  __awaiter(void 0, void 0, void 0, function* () {\n    (0, jest_custom_reporter_1.log)(\"create FunctionsClient with wrong jwt\");\n    const fclient = new index_1.FunctionsClient(\n      `http://localhost:${relay.container.getMappedPort(8081)}`\n    );\n    const wrongKey = (0, jsonwebtoken_1.sign)({ name: \"anon\" }, \"wrong_jwt\");\n    (0,\n    jest_custom_reporter_1.attach)(\"setAuth with wrong jwt\", wrongKey, allure_js_commons_1.ContentType.TEXT);\n    fclient.setAuth(wrongKey);\n    (0, jest_custom_reporter_1.log)(\"invoke hello with Authorization header\");\n    const { data, error } = yield fclient.invoke(\"hello\", {\n      responseType: \"text\",\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    });\n    (0, jest_custom_reporter_1.log)(\"assert no error\");\n\n    expect(error).toBeNull();\n    (0, jest_custom_reporter_1.log)(`assert ${data} is equal to 'Hello World'`);\n    expect(data).toEqual(\"Hello World\");\n  });\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "create FunctionsClient with wrong jwt",
      "time" : {
        "start" : 1650281369867,
        "stop" : 1650281369867,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "setAuth with wrong jwt",
      "time" : {
        "start" : 1650281369867,
        "stop" : 1650281369867,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5999858b3398764d",
        "name" : "text/plain",
        "source" : "5999858b3398764d.txt",
        "type" : "text/plain",
        "size" : 124
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "invoke hello with Authorization header",
      "time" : {
        "start" : 1650281369867,
        "stop" : 1650281369867,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "assert no error",
      "time" : {
        "start" : 1650281369871,
        "stop" : 1650281369871,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "assert Hello World is equal to 'Hello World'",
      "time" : {
        "start" : 1650281369871,
        "stop" : 1650281369871,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "auth"
  }, {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "package",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "spec"
  }, {
    "name" : "subSuite",
    "value" : "hello.spec.ts"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "b26608af72da833f",
        "reportUrl" : "https://supabase.github.io/test-reports/functions-js/13//#testresult/b26608af72da833f",
        "status" : "passed",
        "time" : {
          "start" : 1650270925008,
          "stop" : 1650270925029,
          "duration" : 21
        }
      }, {
        "uid" : "7052bbe2304f9d77",
        "reportUrl" : "https://supabase.github.io/test-reports/functions-js/14//#testresult/7052bbe2304f9d77",
        "status" : "passed",
        "time" : {
          "start" : 1650270902849,
          "stop" : 1650270902866,
          "duration" : 17
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "90fbbb219974b62a.json",
  "parameterValues" : [ ]
}