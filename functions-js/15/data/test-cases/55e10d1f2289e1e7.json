{
  "uid" : "55e10d1f2289e1e7",
  "name" : "invoke mirror with invoke header",
  "fullName" : "invoke mirror with invoke header",
  "historyId" : "f5cbf71eda55922c0c1fc133fab17298",
  "time" : {
    "start" : 1650281366158,
    "stop" : 1650281366185,
    "duration" : 27
  },
  "description" : "\n### Test\n```typescript\n() =>\n  __awaiter(void 0, void 0, void 0, function* () {\n    var _c;\n\n    (0, jest_custom_reporter_1.log)(\"create FunctionsClient\");\n    const fclient = new index_1.FunctionsClient(\n      `http://localhost:${relay.container.getMappedPort(8081)}`\n    );\n    (0, jest_custom_reporter_1.log)(\"invoke mirror\");\n    const customHeader = (0, nanoid_1.nanoid)();\n    const { data, error } = yield fclient.invoke(\"mirror\", {\n      responseType: \"json\",\n      headers: {\n        \"custom-header\": customHeader,\n        Authorization: `Bearer ${apiKey}`,\n      },\n    });\n    (0, jest_custom_reporter_1.log)(\"assert no error\");\n\n    expect(error).toBeNull();\n    const expected = {\n      url: \"http://localhost:8000/mirror\",\n      method: \"POST\",\n      headers:\n        (_c = data === null || data === void 0 ? void 0 : data.headers) !==\n          null && _c !== void 0\n          ? _c\n          : [],\n      body: \"\",\n    };\n    (0,\n    jest_custom_reporter_1.attach)(\"check data from function\", `expected: ${JSON.stringify(expected)}\\n actual: ${JSON.stringify(data)}`, allure_js_commons_1.ContentType.TEXT);\n    expect(data).toEqual(expected);\n    (0,\n    jest_custom_reporter_1.attach)(\"check headers from function\", `expected to include: ${[\"custom-header\", customHeader]}\\n actual: ${JSON.stringify(data === null || data === void 0 ? void 0 : data.headers)}`, allure_js_commons_1.ContentType.TEXT);\n    expect(\n      (data === null || data === void 0 ? void 0 : data.headers).filter(\n        ([k, v]) => k === \"custom-header\" && v === customHeader\n      ).length > 0\n    ).toBe(true);\n  });\n\n```\n",
  "descriptionHtml" : "<h3>Test</h3>\n<pre><code class=\"language-typescript\">() =&gt;\n  __awaiter(void 0, void 0, void 0, function* () {\n    var _c;\n\n    (0, jest_custom_reporter_1.log)(&quot;create FunctionsClient&quot;);\n    const fclient = new index_1.FunctionsClient(\n      `http://localhost:${relay.container.getMappedPort(8081)}`\n    );\n    (0, jest_custom_reporter_1.log)(&quot;invoke mirror&quot;);\n    const customHeader = (0, nanoid_1.nanoid)();\n    const { data, error } = yield fclient.invoke(&quot;mirror&quot;, {\n      responseType: &quot;json&quot;,\n      headers: {\n        &quot;custom-header&quot;: customHeader,\n        Authorization: `Bearer ${apiKey}`,\n      },\n    });\n    (0, jest_custom_reporter_1.log)(&quot;assert no error&quot;);\n\n    expect(error).toBeNull();\n    const expected = {\n      url: &quot;http://localhost:8000/mirror&quot;,\n      method: &quot;POST&quot;,\n      headers:\n        (_c = data === null || data === void 0 ? void 0 : data.headers) !==\n          null &amp;&amp; _c !== void 0\n          ? _c\n          : [],\n      body: &quot;&quot;,\n    };\n    (0,\n    jest_custom_reporter_1.attach)(&quot;check data from function&quot;, `expected: ${JSON.stringify(expected)}\\n actual: ${JSON.stringify(data)}`, allure_js_commons_1.ContentType.TEXT);\n    expect(data).toEqual(expected);\n    (0,\n    jest_custom_reporter_1.attach)(&quot;check headers from function&quot;, `expected to include: ${[&quot;custom-header&quot;, customHeader]}\\n actual: ${JSON.stringify(data === null || data === void 0 ? void 0 : data.headers)}`, allure_js_commons_1.ContentType.TEXT);\n    expect(\n      (data === null || data === void 0 ? void 0 : data.headers).filter(\n        ([k, v]) =&gt; k === &quot;custom-header&quot; &amp;&amp; v === customHeader\n      ).length &gt; 0\n    ).toBe(true);\n  });\n\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ {
      "name" : "read function body",
      "time" : {
        "start" : 1650281358751,
        "stop" : 1650281358751,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "function body",
      "time" : {
        "start" : 1650281358751,
        "stop" : 1650281358751,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d8e02f864ad2ca01",
        "name" : "text/plain",
        "source" : "d8e02f864ad2ca01.txt",
        "type" : "text/plain",
        "size" : 1483
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "add network",
      "time" : {
        "start" : 1650281358752,
        "stop" : 1650281358752,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "create relay mirror-7CZMQ",
      "time" : {
        "start" : 1650281360338,
        "stop" : 1650281360338,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "start relay mirror-7CZMQ",
      "time" : {
        "start" : 1650281360338,
        "stop" : 1650281360338,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "check function is healthy: mirror-7CZMQ",
      "time" : {
        "start" : 1650281364327,
        "stop" : 1650281364328,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "function started to serve: mirror-7CZMQ",
      "time" : {
        "start" : 1650281365874,
        "stop" : 1650281365874,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### Test\n```typescript\n() =>\n  __awaiter(void 0, void 0, void 0, function* () {\n    var _c;\n\n    (0, jest_custom_reporter_1.log)(\"create FunctionsClient\");\n    const fclient = new index_1.FunctionsClient(\n      `http://localhost:${relay.container.getMappedPort(8081)}`\n    );\n    (0, jest_custom_reporter_1.log)(\"invoke mirror\");\n    const customHeader = (0, nanoid_1.nanoid)();\n    const { data, error } = yield fclient.invoke(\"mirror\", {\n      responseType: \"json\",\n      headers: {\n        \"custom-header\": customHeader,\n        Authorization: `Bearer ${apiKey}`,\n      },\n    });\n    (0, jest_custom_reporter_1.log)(\"assert no error\");\n\n    expect(error).toBeNull();\n    const expected = {\n      url: \"http://localhost:8000/mirror\",\n      method: \"POST\",\n      headers:\n        (_c = data === null || data === void 0 ? void 0 : data.headers) !==\n          null && _c !== void 0\n          ? _c\n          : [],\n      body: \"\",\n    };\n    (0,\n    jest_custom_reporter_1.attach)(\"check data from function\", `expected: ${JSON.stringify(expected)}\\n actual: ${JSON.stringify(data)}`, allure_js_commons_1.ContentType.TEXT);\n    expect(data).toEqual(expected);\n    (0,\n    jest_custom_reporter_1.attach)(\"check headers from function\", `expected to include: ${[\"custom-header\", customHeader]}\\n actual: ${JSON.stringify(data === null || data === void 0 ? void 0 : data.headers)}`, allure_js_commons_1.ContentType.TEXT);\n    expect(\n      (data === null || data === void 0 ? void 0 : data.headers).filter(\n        ([k, v]) => k === \"custom-header\" && v === customHeader\n      ).length > 0\n    ).toBe(true);\n  });\n\n```\n",
    "status" : "passed",
    "steps" : [ {
      "name" : "create FunctionsClient",
      "time" : {
        "start" : 1650281366180,
        "stop" : 1650281366180,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "invoke mirror",
      "time" : {
        "start" : 1650281366180,
        "stop" : 1650281366180,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "assert no error",
      "time" : {
        "start" : 1650281366185,
        "stop" : 1650281366185,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "check data from function",
      "time" : {
        "start" : 1650281366185,
        "stop" : 1650281366185,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "8c0b0231a4d93541",
        "name" : "text/plain",
        "source" : "8c0b0231a4d93541.txt",
        "type" : "text/plain",
        "size" : 1018
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "check headers from function",
      "time" : {
        "start" : 1650281366185,
        "stop" : 1650281366185,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "deb4f367cb87b174",
        "name" : "text/plain",
        "source" : "deb4f367cb87b174.txt",
        "type" : "text/plain",
        "size" : 490
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "headers"
  }, {
    "name" : "thread",
    "value" : "1"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "package",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "spec"
  }, {
    "name" : "subSuite",
    "value" : "params.spec.ts"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "b1f522c048a47b69",
        "reportUrl" : "https://supabase.github.io/test-reports/functions-js/13//#testresult/b1f522c048a47b69",
        "status" : "passed",
        "time" : {
          "start" : 1650270919336,
          "stop" : 1650270919371,
          "duration" : 35
        }
      }, {
        "uid" : "98774e58c2c2b08",
        "reportUrl" : "https://supabase.github.io/test-reports/functions-js/14//#testresult/98774e58c2c2b08",
        "status" : "passed",
        "time" : {
          "start" : 1650270898834,
          "stop" : 1650270898864,
          "duration" : 30
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "55e10d1f2289e1e7.json",
  "parameterValues" : [ ]
}